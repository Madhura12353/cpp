//
//
//
//



#include <iostream>
#include<vector>
# include <string>
//#include <math.h>
using namespace std;
//int covert2base10(int base, char value[15]);

int main()
{   //number in base 15 is 1023456789ABCDE


	int base;
	double result ;
	//string[] number;


	cout << "\nenter the base: ";
	cin >> base;
	cout << "\nBase :" << base << endl;
	cout << "Enter number of names /n";
	int a;
	cin >> a;
	vector<string> names;
	for (int i = 0; i<a; i++) {
		string temp;
		cin >> temp;
		names.push_back(temp);
	}

	
//	cout << "\nenter the number: ";
	//cin >> number;
	//cout << "\nnumber: " << number << endl;

	/*int size = sizeof(number[]);
	cout << "\nSize of string array is: " << size << endl << endl;

	for (int i = 0; i < size; i++)
	{
		if (number[i] >= 48 && number[i] <= 57)
		{
			result += (number[i] - 48)*pow(base, size - i - 1);
			cout << "result: " << result << endl;
		}
		else if (number[i] >= 65 && number[i] <= 70) {
			result += (number[i] - 55)*pow(base, size - i - 1);
			cout << "result: " << result << endl;
		}
		else if (number[i] >= 97 && number[i] <= 102) {
			result += (number[i] - 87)*pow(base, size - i - 1);
			cout << "result: " << result << endl;
		}
	}

	cout << "\nresult: " << result<<endl;*/

	system("pause");

}




/*int covert2base10(int base, char value[15])
{
	int sum;

	char digits[] = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

	for (int i = 0; i<15; i++)
	{
		sum += (pow(base, i)*value[14 - i]);
	}
	cout << sum << endl;
	//this prints 29480883458974408
	sum = 0;
	for (int i = 0; i<15; i++)
	{
		sum = (sum*base) + value[i];
	}
	cout << sum << endl;
	
	return sum;

}

/*int main()
{   //number in base 15 is 1023456789ABCDE
	int value[15] = { 1,0,2,3,4,5,6,7,8,9,10,11,12,13,14 };
	int base = 15;
	unsigned long long sum = 0;
	for (int i = 0; i<15; i++)
	{
		sum += (pow(base, i)*value[14 - i]);
	}
	cout << sum << endl;
	//this prints 29480883458974408
	sum = 0;
	for (int i = 0; i<15; i++)
	{
		sum = (sum*base) + value[i];
	}
	cout << sum << endl;
	//this prints 29480883458974409
	system("pause");
	return 0;
}

/*#include <iostream>
using namespace std;

int anybase2dec(int base, char number[], int size);
int main()
{
	
	int base;
	const int size=4;
	char number[size];

	cout << "\n Enter the base you want to convert: ";
	cin >> base;
	cout << "\n Enter the number: ";
	cin >>number[size];
	anybase2dec(base, number[], size);
	
//	anybase2dec(base, number[size], size);
	




	system("pause");
}


int anybase2dec(int base, char number[],int size)
{
	int result = 0;
	int size = sizeof(number);

	for (int i = 0; i < size; i++)
	{
		if (number[i] >= 48 && number[i] <= 57)
		{
			result += (number[i] - 48)*pow(base, size - i - 1);
		}
		else if (number[i] >= 65 && number[i] <= 70) {
			result += (number[i] - 55)*pow(base, size - i - 1);
		}
		else if (number[i] >= 97 && number[i] <= 102) {
			result += (number[i] - 87)*pow(base, size- i - 1);
		}
	}


	return result;

}









/*unsigned long hex2dec(string hex)
{
	unsigned long result = 0;
	for (int i = 0; i < hex.length(); i++)
	{
		if (hex[i] >= 48 && hex[i] <= 57)
		{
			result += (hex[i] - 48)*pow(16, hex.length() - i - 1);
		}
		else if (hex[i] >= 65 && hex[i] <= 70) {
			result += (hex[i] - 55)*pow(16, hex.length() - i - 1);
		}
		else if (hex[i] >= 97 && hex[i] <= 102) {
			result += (hex[i] - 87)*pow(16, hex.length() - i - 1);
		}

	}
	return result;
	
}

int main(int argc, const char * argv[]) 
{
	string hex_str;
	cin >> hex_str;
	cout << hex2dec(hex_str) << endl;
	system("pause");
	
}*/

